// <auto-generated />
using System;
using Journey.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Journey.Infrastructure.Data.Migrations
{
    [DbContext(typeof(JourneyDbContext))]
    partial class JourneyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Journey.Infrastructure.Entities.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TripId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7df654c-b71e-408b-8ad9-a5dc03c544c0"),
                            Date = new DateTime(2024, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visita a Kyoto",
                            Status = 0,
                            TripId = new Guid("b01dfe10-8d9d-4b30-9074-25eaf4ac6b3f")
                        },
                        new
                        {
                            Id = new Guid("d369011f-3621-47d5-bb23-72c19eb70fdf"),
                            Date = new DateTime(2024, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visita a Torre Eiffel",
                            Status = 0,
                            TripId = new Guid("b01dfe10-8d9d-4b30-9074-25eaf4ac6b3f")
                        },
                        new
                        {
                            Id = new Guid("97a72555-d2aa-440d-9499-f5f307e62d18"),
                            Date = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cruzamento no Rio Sena",
                            Status = 0,
                            TripId = new Guid("b01dfe10-8d9d-4b30-9074-25eaf4ac6b3f")
                        },
                        new
                        {
                            Id = new Guid("c5b3c55b-3b9f-44be-97e0-4cf14505bcca"),
                            Date = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visita a Tokyo Tower",
                            Status = 0,
                            TripId = new Guid("c47f61e0-5e44-4589-99cd-42144e3ec2e6")
                        },
                        new
                        {
                            Id = new Guid("cfdd3b41-4ba1-46de-ad2b-30ae54a36c23"),
                            Date = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Passeio em Shibuya",
                            Status = 0,
                            TripId = new Guid("c47f61e0-5e44-4589-99cd-42144e3ec2e6")
                        },
                        new
                        {
                            Id = new Guid("9c5d9336-ccc7-4683-b1f6-651bdd28bbbe"),
                            Date = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visita a Kyoto",
                            Status = 0,
                            TripId = new Guid("c47f61e0-5e44-4589-99cd-42144e3ec2e6")
                        });
                });

            modelBuilder.Entity("Journey.Infrastructure.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b01dfe10-8d9d-4b30-9074-25eaf4ac6b3f"),
                            EndDate = new DateTime(2024, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Viagem a Paris",
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c47f61e0-5e44-4589-99cd-42144e3ec2e6"),
                            EndDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Viagem ao Japão",
                            StartDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Journey.Infrastructure.Entities.Activity", b =>
                {
                    b.HasOne("Journey.Infrastructure.Entities.Trip", null)
                        .WithMany("Activities")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Journey.Infrastructure.Entities.Trip", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
