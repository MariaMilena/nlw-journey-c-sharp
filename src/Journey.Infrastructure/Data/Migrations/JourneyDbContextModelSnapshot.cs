// <auto-generated />
using System;
using Journey.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Journey.Infrastructure.Data.Migrations
{
    [DbContext(typeof(JourneyDbContext))]
    partial class JourneyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Journey.Infrastructure.Entities.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TripId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b3d712d-dd58-45f4-bf11-1487a5c8417f"),
                            Date = new DateTime(2024, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visita a Kyoto",
                            Status = 0,
                            TripId = new Guid("4d598a32-27a0-48b2-9d4f-631022b81841")
                        },
                        new
                        {
                            Id = new Guid("d1400573-70f3-4af7-b895-a5e87a0e0f03"),
                            Date = new DateTime(2024, 7, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visita a Torre Eiffel",
                            Status = 0,
                            TripId = new Guid("4d598a32-27a0-48b2-9d4f-631022b81841")
                        },
                        new
                        {
                            Id = new Guid("a34dede2-7489-4e80-944d-4a25b6198966"),
                            Date = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cruzamento no Rio Sena",
                            Status = 0,
                            TripId = new Guid("4d598a32-27a0-48b2-9d4f-631022b81841")
                        },
                        new
                        {
                            Id = new Guid("57d2df16-2c71-4190-9f73-30325fecd214"),
                            Date = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visita a Tokyo Tower",
                            Status = 0,
                            TripId = new Guid("a31b64f8-54c3-467c-995e-c0b0e463ec67")
                        },
                        new
                        {
                            Id = new Guid("7376c29d-2a7e-4b57-8f15-107ffe44c6b1"),
                            Date = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Passeio em Shibuya",
                            Status = 0,
                            TripId = new Guid("a31b64f8-54c3-467c-995e-c0b0e463ec67")
                        },
                        new
                        {
                            Id = new Guid("b11cd790-4656-4249-ac59-ac1842a40f4f"),
                            Date = new DateTime(2024, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Visita a Kyoto",
                            Status = 0,
                            TripId = new Guid("a31b64f8-54c3-467c-995e-c0b0e463ec67")
                        });
                });

            modelBuilder.Entity("Journey.Infrastructure.Entities.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4d598a32-27a0-48b2-9d4f-631022b81841"),
                            EndDate = new DateTime(2024, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Viagem a Paris",
                            StartDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a31b64f8-54c3-467c-995e-c0b0e463ec67"),
                            EndDate = new DateTime(2024, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Viagem ao Japão",
                            StartDate = new DateTime(2024, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Journey.Infrastructure.Entities.Activity", b =>
                {
                    b.HasOne("Journey.Infrastructure.Entities.Trip", null)
                        .WithMany("Activities")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Journey.Infrastructure.Entities.Trip", b =>
                {
                    b.Navigation("Activities");
                });
#pragma warning restore 612, 618
        }
    }
}
